View(a)
install.packages("slidify");
install.packages("devtools");
source("https://www.bioconductor.org/biocLite-R/")
source("https://www.bioconductor.org/biocLite-R/");
source("http://www.bioconductor.org/biocLite-R/");
source("http://www.bioconductor.org/biocLite.R/");
source("http://www.bioconductor.org/biocLite.R")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
BiocManager::install(c("biocLite))
y
q
quit
biocLite
BiocManager::install(c("GenomicFeatures", "AnnotationDbi"))
setwd("C:/Users/Mauro/datasciencecoursera/Assignment3")
best <- function(state, outcome) {
## Read outcome data
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data", colClasses = "character")
outcome <- c(outcome, fileOutcome[,outcome])
outcome
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best(A, "heart attack")
best(A, heart attack)
best <- function(state, outcome) {
## Read outcome data
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data", colClasses = "character")
#outcome <- c(outcome, fileOutcome[,outcome])
#outcome
fileOutcome
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best(A, heart attack)
best("A", "heart attack")
best <- function() {
## Read outcome data
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data", colClasses = "character")
#outcome <- c(outcome, fileOutcome[,outcome])
#outcome
fileOutcome
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best("A", "heart attack")
best()
best <- function(state, outcome) {
## Read outcome data
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
#outcome <- c(outcome, fileOutcome[,outcome])
#outcome
fileOutcome
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- c(outcomeVect, fileOutcome[,outcome])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- c(outcomeVect, fileOutcome[,outcome])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- c(outcomeVect, fileOutcome[,outcome, state])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- c(outcomeVect, fileOutcome[,state],fileOutcome[,outcome])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- c(outcomeVect, fileOutcome[,state],fileOutcome[,outcome])
outcomeVect <- c(outcomeVect, subset(fileOutcome[state, outcome]))
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- c(outcomeVect, subset(fileOutcome[state, outcome]))
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome[state, outcome])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome[state])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome["state"])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome["State"])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome["State","Hospital Type"])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome["State"],fileOutcome["Hospital Type"])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome["Hospital Type"])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome["State"],fileOutcome["Hospital 30-Day Death (Mortality) Rates from Heart Attack"])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome["Hospital 30-Day Death (Mortality) Rates from Heart Attack"])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome["Phone Number"])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome["State"])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome["County Name"])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome["State"])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome["State"])
fileOutcome
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"])
fileOutcome
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome["State","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome["State","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack",fileOutcome["State"]])
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- fileOutcome["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- fileOutcome["State", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- fileOutcome[State, Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack]
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
colnames(outcomeVect) <- c("State","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack")
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
ed_exp1 <- outcomeVect[c(1:2),c(5,6)]
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
ed_exp1 <- outcomeVect[c(1:2),c(5,6)]
ed_exp1
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- outcomeVect[c(1:2),c(5,6)]
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- fileOutcome[c(1:2),c(5,6)]
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- fileOutcome[c(1:2),c(5,6)]
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- fileOutcome[c(1:2)]
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome, Region == 2, select = c("State","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"))
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best <- function(state, outcome) {
## Read outcome data
outcomeVect <- NULL
fileOutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fileHospital <- read.csv("hospital-data.csv", colClasses = "character")
outcomeVect <- subset(fileOutcome, select = c("State","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"))
outcomeVect
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best()
best()
